<?php declare(strict_types=1);
/*
198. 打家劫舍
难度
简单

你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。

给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。

 

示例 1：

输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
     偷窃到的最高金额 = 1 + 3 = 4 。
示例 2：

输入：[2,7,9,3,1]
输出：12
解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
     偷窃到的最高金额 = 2 + 9 + 1 = 12 。
 

提示：

0 <= nums.length <= 100
0 <= nums[i] <= 400
通过次数211,764提交次数450,218
*/
/*
思考一个问题：从左往右走，偷到地N间房子的时候，最大金额是多少？

来到第N间的时候，可以选择偷和不偷
如果选择偷 钱就是 偷到N-2间房子的最大金额+第N间房子的最大金额
不偷 钱就是 上一间房子带过来的钱 也就是 偷到第N-1间房子的最大金额
那么 来到第N间的最大金额就是 nums[N]=max(nums[N-2]+nums[N],nums[N-1])

*/
function deal(array $nums):int{
	$start_time = microtime(true);
	/***************代码开始*********************/
	array_unshift($nums, 0, 0);
	$n = count($nums);
	for ($i=2; $i < $n; $i++) { 
		$nums[$i] = max($nums[$i-1], $nums[$i] + $nums[$i-2]);
	}
	$res = $nums[$n-1];

	/***************代码结束*******************/
	/***********性能监控***********************/ 
	$end_time = microtime(true);
	$need_time = $end_time - $start_time;
	print_r("耗时:" . $need_time . "\r\n");
	/*******************************************/
	return $res;
}
echo deal([1,2,3,1]);
echo "\r\n\r\n";
echo deal([2,7,9,3,1]);
echo "\r\n\r\n";